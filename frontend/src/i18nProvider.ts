//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';
import grOriginal from 'ra-language-greek';

const enResources = {
  resources: {
    Users: {
      name: 'Users',
      fields: {
        UserID: 'User Id',
        Name: 'Name',
        Email: 'Email',
        Password: 'Password',
        id: 'id',
      },
    },
    Orders: {
      name: 'Orders',
      fields: {
        OrderID: 'Order Id',
        UserID: 'User Id',
        NoteDenomination: 'Note Denomination',
        Quantity: 'Quantity',
        TotalAmount: 'Total Amount',
        Status: 'Status',
        Timestamp: 'Timestamp',
        id: 'id',
      },
    },
    Payments: {
      name: 'Payments',
      fields: {
        PaymentID: 'Payment Id',
        UserID: 'User Id',
        Amount: 'Amount',
        PaymentMethod: 'Payment Method',
        TransactionID: 'Transaction Id',
        Timestamp: 'Timestamp',
        id: 'id',
      },
    },
    Notes: {
      name: 'Notes',
      fields: {
        NoteID: 'Note Id',
        Denomination: 'Denomination',
        Quantity: 'Quantity',
        id: 'id',
      },
    },
    Sellers: {
      name: 'Sellers',
      fields: {
        SellerID: 'Seller Id',
        Name: 'Name',
        Notes: 'Notes',
        Commission: 'Commission',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Users: {
      name: 'Users (fr)',
      fields: {
        UserID: 'User Id (fr)',
        Name: 'Name (fr)',
        Email: 'Email (fr)',
        Password: 'Password (fr)',
        id: 'id',
      },
    },
    Orders: {
      name: 'Orders (fr)',
      fields: {
        OrderID: 'Order Id (fr)',
        UserID: 'User Id (fr)',
        NoteDenomination: 'Note Denomination (fr)',
        Quantity: 'Quantity (fr)',
        TotalAmount: 'Total Amount (fr)',
        Status: 'Status (fr)',
        Timestamp: 'Timestamp (fr)',
        id: 'id',
      },
    },
    Payments: {
      name: 'Payments (fr)',
      fields: {
        PaymentID: 'Payment Id (fr)',
        UserID: 'User Id (fr)',
        Amount: 'Amount (fr)',
        PaymentMethod: 'Payment Method (fr)',
        TransactionID: 'Transaction Id (fr)',
        Timestamp: 'Timestamp (fr)',
        id: 'id',
      },
    },
    Notes: {
      name: 'Notes (fr)',
      fields: {
        NoteID: 'Note Id (fr)',
        Denomination: 'Denomination (fr)',
        Quantity: 'Quantity (fr)',
        id: 'id',
      },
    },
    Sellers: {
      name: 'Sellers (fr)',
      fields: {
        SellerID: 'Seller Id (fr)',
        Name: 'Name (fr)',
        Notes: 'Notes (fr)',
        Commission: 'Commission (fr)',
        id: 'id',
      },
    },
  },
};
const grResources = {
  resources: {
    Users: {
      name: 'Users (gr)',
      fields: {
        UserID: 'User Id (gr)',
        Name: 'Name (gr)',
        Email: 'Email (gr)',
        Password: 'Password (gr)',
        id: 'id',
      },
    },
    Orders: {
      name: 'Orders (gr)',
      fields: {
        OrderID: 'Order Id (gr)',
        UserID: 'User Id (gr)',
        NoteDenomination: 'Note Denomination (gr)',
        Quantity: 'Quantity (gr)',
        TotalAmount: 'Total Amount (gr)',
        Status: 'Status (gr)',
        Timestamp: 'Timestamp (gr)',
        id: 'id',
      },
    },
    Payments: {
      name: 'Payments (gr)',
      fields: {
        PaymentID: 'Payment Id (gr)',
        UserID: 'User Id (gr)',
        Amount: 'Amount (gr)',
        PaymentMethod: 'Payment Method (gr)',
        TransactionID: 'Transaction Id (gr)',
        Timestamp: 'Timestamp (gr)',
        id: 'id',
      },
    },
    Notes: {
      name: 'Notes (gr)',
      fields: {
        NoteID: 'Note Id (gr)',
        Denomination: 'Denomination (gr)',
        Quantity: 'Quantity (gr)',
        id: 'id',
      },
    },
    Sellers: {
      name: 'Sellers (gr)',
      fields: {
        SellerID: 'Seller Id (gr)',
        Name: 'Name (gr)',
        Notes: 'Notes (gr)',
        Commission: 'Commission (gr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);
const gr = mergeTranslations(grOriginal, grResources);

const translations = { en, fr, gr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Français' },
    { locale: 'gr', name: 'Ελληνικά' },
  ],
);
